---
swagger: "2.0"
info:
  description: "REST API Practice"
  version: "1.0.0"
  title: "Shopping API"
host: "localhost:5000"
basePath: "/"
tags:
- name: "Shopping API"
  description: "Create and maintain products & Categories"
schemes:
- "https"
- "http"
paths:
  /category:
    get:
      tags:
      - "Shopping"
      summary: "Get List of Categories"
      operationId: "GetCategories"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
  /products:
    get:
      tags:
      - "Shopping"
      summary: "Get List of products"
      operationId: "GetProduct"
      produces:
      - "application/json"
      parameters:
      - name: "categoryId"
        in: "query"
        description: "Get Products for specific category"
        required: false
        type: "number"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
    post:
      tags:
      - "Shopping"
      summary: "Add Products"
      description: "Add new products"
      operationId: "AddProduct"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "product"
          description: "new product Object"
          schema:
            $ref: '#/definitions/SaveProduct'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Product"
  /products/{id}:
    get:
      tags:
      - "Shopping"
      summary: "Get List of products"
      operationId: "GetProductById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "product Id to filter by"
        required: true
        type: "number"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Product Id is required"
    put:
      tags:
      - "Shopping"
      summary: "Update product"
      operationId: "UpdateProduct"
      produces:
      - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "product Id to be updated"
          required: true
          type: "number"
        - in: "body"
          name: "product"
          description: "new product Object"
          schema:
            $ref: '#/definitions/SaveProduct'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Product Id is required"
definitions:
  Category: 
    type: "object"
    required: 
    - "id"
    properties:
      id:
        type: "number"
      name:
        type: "string"
        maxLength: 50
  Product: 
    type: "object"
    required: 
    - "id"
    properties:
      id:
        type: "number"
      name:
        type: "string"
        maxLength: 50
      price: 
        type: "number"
        multipleOf: 0.0001
        maxLength: 18
      quantity: 
        type: number
      ImgURL: 
        type: "string"
        maxLength: 100
      category: 
        type: "object"
        $ref: "#/definitions/Category"
  SaveProduct: 
    type: "object"
    required: 
    - "name"
    properties:
      name:
        type: "string"
        maxLength: 50
      price: 
        type: "number"
        multipleOf: 0.0001
        maxLength: 18
      quantity: 
        type: number
      ImgURL: 
        type: "string"
        maxLength: 100
      categoryId: 
        type: "number"